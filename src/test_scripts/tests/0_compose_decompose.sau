[var x [compose [+ 3 [* 9 2]]]]

[assert "compose_and_decompise.sau > decompose basic" [== [decompose x] 21]]

[var fn [compose [lambda [n] [
   [+ [* n 2] 10]
]]]]


; Lambdas need to be explicitly decompised into another
; cell before they can be called due to the nature of it being a
; process of definition
[var decomposed_lambda [decompose  fn]]

[assert "compose_and_decompise.sau > decompose lambda evaluated" [== [decomposed_lambda 5] 20]]

[assert "compose_and_decompise.sau > decompose direct" [== 66 [decompose "[var x [+ 33 33]]"]]]


; Objects

[var composed_object [compose [object object_that_is_composed [block
  [var sum [lambda [a b c] [+ a b c]]]
  [var number 42]
]]]]

[decompose composed_object]

[var item object_that_is_composed]

[assert "compose_and_decompise.sau > decompose object" [== 24 [item.sum 8 8 8]]]